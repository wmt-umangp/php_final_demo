// Write An SQL Query To Fetch “FIRST_NAME” From Worker Table Using The Alias Name As <WORKER_NAME>.
1.  select FIRST_NAME AS WORKER_NAME from Worker;

//Write An SQL Query To Fetch “FIRST_NAME” From Worker Table In Upper Case.
2.  select UPPER(FIRST_NAME) AS FIRST_NAME FROM Worker; 

//Write An SQL Query To Fetch Unique Values Of DEPARTMENT From Worker Table.
3.  SELECT DISTINCT DEPARTMENT FROM Worker;

//Write An SQL Query To Print The First Three Characters Of FIRST_NAME From Worker Table.
4.  SELECT SUBSTRING(FIRST_NAME,1,3) as 'First Name' from Worker;

//Write An SQL Query To Find The Position Of The Alphabet (‘A’) In The First Name Column ‘Amitabh’ From Worker Table.
5.  SELECT INSTR(FIRST_NAME,"a") AS 'FIRST NAME' from Worker where FIRST_NAME="Amitabh";

//Write An SQL Query To Print The FIRST_NAME From Worker Table After Removing White Spaces From The Right Side.
6.  select RTRIM(FIRST_NAME) AS 'First Name' from Worker;

//Write An SQL Query To Print The DEPARTMENT From Worker Table After Removing White Spaces From The Left Side.
7.  select LTRIM(DEPARTMENT) AS DEPARTMENT FROM Worker;

//Write An SQL Query That Fetches The Unique Values Of DEPARTMENT From Worker Table And Prints Its Length.
8.  select DISTINCT length(DEPARTMENT) from Worker;

//Write An SQL Query To Print The FIRST_NAME From Worker Table After Replacing ‘a’ With ‘A’.
9.  select REPLACE(FIRST_NAME,'a','A') as 'FIRST NAME' from Worker;

//Write An SQL Query To Print The FIRST_NAME And LAST_NAME From Worker Table Into A Single Column COMPLETE_NAME. A Space Char Should Separate Them.
10. select CONCAT(FIRST_NAME,' ',LAST_NAME) AS COMPLETE_NAME from Worker;

//Write An SQL Query To Print All Worker Details From The Worker Table Order By FIRST_NAME Ascending.
11. SELECT * FROM Worker ORDER BY FIRST_NAME;

//Write An SQL Query To Print All Worker Details From The Worker Table Order By FIRST_NAME Ascending And DEPARTMENT Descending.
12. select * from Worker ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

//Write An SQL Query To Print Details For Workers With The First Name As “Vipul” And “Satish” From Worker Table.
13. SELECT * FROM Worker where FIRST_NAME IN('Vipul','Satish');

//Write An SQL Query To Print Details Of Workers Excluding First Names, “Vipul” And “Satish” From Worker Table.
14. SELECT * FROM Worker where FIRST_NAME NOT IN('Vipul','Satish');

//Write An SQL Query To Print Details Of Workers With DEPARTMENT Name As “Admin”.
15. SELECT * from Worker WHERE DEPARTMENT='Admin';

//Write An SQL Query To Print Details Of The Workers Whose FIRST_NAME Contains ‘A’.
16. SELECT * FROM Worker WHERE FIRST_NAME LIKE '%A%';

//Write An SQL Query To Print Details Of The Workers Whose FIRST_NAME Ends With ‘A’.
17. SELECT * FROM Worker WHERE FIRST_NAME LIKE '%a';

//Write An SQL Query To Print Details Of The Workers Whose FIRST_NAME Ends With ‘H’ And Contains Six Alphabets.
18. SELECT * FROM Worker WHERE FIRST_NAME LIKE '_____h';

//Write An SQL Query To Print Details Of The Workers Whose SALARY Lies Between 100000 And 500000.
19. SELECT * FROM Worker WHERE SALARY BETWEEN 100000 AND 500000;

//Write An SQL Query To Print Details Of The Workers Who Have Joined In Feb’2014.
20. SELECT * FROM Worker WHERE year(JOINING_DATE)=2014 AND month(JOINING_DATE)=2;

//Write An SQL Query To Fetch The Count Of Employees Working In The Department ‘Admin’.
21. SELECT COUNT(FIRST_NAME) AS 'EMPLOYEE WORKING IN ADMIN DEPARTMENT' FROM Worker WHERE DEPARTMENT='Admin';

//Write An SQL Query To Fetch Worker Names With Salaries >= 50000 And <= 100000.
22. SELECT FIRST_NAME, LAST_NAME FROM Worker WHERE SALARY BETWEEN 50000 AND 100000;

//Write An SQL Query To Fetch The No. Of Workers For Each Department In The Descending Order.
23. SELECT DEPARTMENT, COUNT(WORKER_ID) AS NUM_OF_WORKER FROM Worker GROUP BY DEPARTMENT ORDER BY NUM_OF_WORKER DESC;

//Write An SQL Query To Print Details Of The Workers Who Are Also Managers.
24. SELECT DISTINCT W.FIRST_NAME, T.WORKER_TITLE FROM Worker W INNER JOIN Title T ON W.WORKER_ID=T.WORKER_REF_ID AND T.WORKER_TITLE='Manager';

//Write An SQL Query To Fetch Duplicate Records Having Matching Data In Some Fields Of A Table.
25. SELECT WORKER_TITLE, AFFECTED_FROM, COUNT(*) FROM Title GROUP BY WORKER_TITLE, AFFECTED_FROM HAVING COUNT(*) > 1;

//Write An SQL Query To Show Only Odd Rows From A Table.
26. SELECT * FROM Worker WHERE MOD(WORKER_ID,2)!=0;


//Write An SQL Query To Show Only Even Rows From A Table.
27. SELECT * FROM Worker WHERE MOD(WORKER_ID,2)=0;


/Write An SQL Query To Clone A New Table From Another Table.
28. CREATE TABLE WorkerClone LIKE Worker;


//Write An SQL Query To Fetch Intersecting Records Of Two Tables.
29. SELECT WORKER_REF_ID FROM Bonus INTERSECT (SELECT WORKER_REF_ID FROM Title);


//Write An SQL Query To Show Records From One Table That Another Table Does Not Have.
30. SELECT w1.WORKER_ID FROM Worker w1 LEFT JOIN Title t1 ON w1.WORKER_ID = t1.WORKER_REF_ID WHERE t1.WORKER_REF_ID IS NULL;


//Write An SQL Query To Show The Current Date And Time.
31. SELECT Now();


//Write An SQL Query To Show The Top N (Say 10) Records Of A Table.
32. SELECT * FROM Worker LIMIT 5;


//Write An SQL Query To Determine The Nth (Say N=5) Highest Salary From A Table.
33.    SELECT * FROM Worker ORDER BY SALARY DESC LIMIT 5;



//Write An SQL Query To Determine The 5th Highest Salary Without Using TOP Or Limit Method.
34. SELECT FIRST_NAME, Salary FROM Worker W1 WHERE (5) = ( SELECT COUNT( W2.Salary ) FROM Worker W2 WHERE W2.Salary >= W1.Salary );



//Write An SQL Query To Fetch The List Of Employees With The Same Salary.
35. Select distinct W.WORKER_ID, W.FIRST_NAME, W.Salary from Worker W, Worker W1 where W.Salary = W1.Salary and W.WORKER_ID != W1.WORKER_ID;



//Write An SQL Query To Show The Second Highest Salary From A Table.
36. SELECT FIRST_NAME, Salary FROM Worker W1 WHERE (2) = (SELECT COUNT( W2.Salary ) FROM Worker W2 WHERE W2.Salary >= W1.Salary );;



//Write An SQL Query To Show One Row Twice In Results From A Table.
37. select FIRST_NAME, DEPARTMENT from Worker W where W.DEPARTMENT='HR' union all select FIRST_NAME, DEPARTMENT from Worker W1 where W1.DEPARTMENT='HR';



//Write An SQL Query To Fetch Intersecting Records Of Two Tables.
38.SELECT WORKER_REF_ID FROM Bonus INTERSECT (SELECT WORKER_REF_ID FROM Title);



//Write An SQL Query To Fetch The First 50% Records From A Table.
39. SELECT * FROM Worker WHERE WORKER_ID <= (SELECT count(WORKER_ID)/2 from Worker);



//Write An SQL Query To Fetch The Departments That Have Less Than Five People In It.
40. SELECT DEPARTMENT, COUNT(WORKER_ID) as 'Number of Workers' FROM Worker GROUP BY DEPARTMENT HAVING COUNT(WORKER_ID) < 5;



//Write An SQL Query To Show All Departments Along With The Number Of People In There.
41. SELECT DEPARTMENT, COUNT(DEPARTMENT) AS 'Number of Works' FROM Worker GROUP BY DEPARTMENT;



//Write An SQL Query To Show The Last Record From A Table.
42. SELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 1;



//Write An SQL Query To Fetch The First Row Of A Table.
43. SELECT * FROM Worker ORDER BY WORKER_ID LIMIT 1;



//Write An SQL Query To Fetch The Last Five Records From A Table.
44. SELECT * FROM Worker ORDER BY WORKER_ID DESC LIMIT 5;



//Write An SQL Query To Print The Name Of Employees Having The Highest Salary In Each Department.
45. SELECT t.DEPARTMENT,t.FIRST_NAME,t.Salary from(SELECT max(Salary) as TotalSalary,DEPARTMENT from Worker group by DEPARTMENT) as TempNew Inner Join Worker t on TempNew.DEPARTMENT=t.DEPARTMENT and TempNew.TotalSalary=t.Salary;



//Write An SQL Query To Fetch Three Max Salaries From A Table.
46. SELECT distinct Salary from Worker a WHERE 3 >= (SELECT count(distinct Salary) from Worker b WHERE a.Salary <= b.Salary) order by a.Salary desc;



//Write An SQL Query To Fetch Three Min Salaries From A Table.
47. SELECT distinct Salary from Worker a WHERE 3 >= (SELECT count(distinct Salary) from Worker b WHERE a.Salary >= b.Salary) order by a.Salary desc;



//Write An SQL Query To Fetch Nth Max Salaries From A Table.
48. SELECT distinct FIRST_NAME,Salary from Worker a WHERE (2) >= (SELECT count(distinct Salary) from Worker b WHERE a.Salary <= b.Salary) order by a.Salary desc;



//Write An SQL Query To Fetch Departments Along With The Total Salaries Paid For Each Of Them.
49. SELECT DEPARTMENT, sum(Salary) AS "Total Salary" from Worker group by DEPARTMENT;



Write An SQL Query To Fetch The Names Of Workers Who Earn The Highest Salary.
50. SELECT FIRST_NAME,LAST_NAME,SALARY FROM Worker where SALARY=(SELECT MAX(SALARY) FROM Worker);
